[gd_scene load_steps=11 format=3 uid="uid://kfjtqqfeaobu"]

[ext_resource type="Texture2D" uid="uid://bwwx4e0uygbow" path="res://sprite/2dc704a2-273a-446e-9c39-bf891b3f5aba-removebg-preview.png" id="1_i3pqv"]
[ext_resource type="Texture2D" uid="uid://bwnvox4s4l44k" path="res://sprite/3a8b657e-7e07-484b-a7cb-fe1cd42f4fce-removebg-preview.png" id="2_hqtel"]
[ext_resource type="Texture2D" uid="uid://b0d6jtfdkxicv" path="res://sprite/352f26ba-b13a-4dd5-af8f-96a3677fdc6f-removebg-preview.png" id="3_sweqy"]
[ext_resource type="Script" uid="uid://mjdq7tdf8ssw" path="res://scene/animated_sprite_2d.gd" id="4_ct4mp"]

[sub_resource type="GDScript" id="GDScript_fvtld"]
script/source = "extends CharacterBody2D


const SPEED = 300.0
const JUMP_VELOCITY = -400.0


func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction := Input.get_axis(\"move left\", \"move right\")
	if direction:
		velocity.x = direction * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)

	move_and_slide()
"

[sub_resource type="AtlasTexture" id="AtlasTexture_2hs0m"]
atlas = ExtResource("1_i3pqv")
region = Rect2(189, 0, 189, 408)

[sub_resource type="AtlasTexture" id="AtlasTexture_1jxqw"]
atlas = ExtResource("2_hqtel")
region = Rect2(189, 0, 189, 408)

[sub_resource type="AtlasTexture" id="AtlasTexture_dw050"]
atlas = ExtResource("3_sweqy")
region = Rect2(189, 0, 189, 408)

[sub_resource type="SpriteFrames" id="SpriteFrames_b26j0"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_2hs0m")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2hs0m")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2hs0m")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2hs0m")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2hs0m")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2hs0m")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1jxqw")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1jxqw")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1jxqw")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_dw050")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_dw050")
}],
"loop": true,
"name": &"idling",
"speed": 5.0
}, {
"frames": [],
"loop": true,
"name": &"running",
"speed": 5.0
}]

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_ct4mp"]
radius = 56.0
height = 248.0

[node name="player" type="CharacterBody2D"]
position = Vector2(-21, 9.53674e-07)
scale = Vector2(0.3694, 0.280719)
script = SubResource("GDScript_fvtld")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
position = Vector2(139, -170)
sprite_frames = SubResource("SpriteFrames_b26j0")
animation = &"idling"
autoplay = "idling"
script = ExtResource("4_ct4mp")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(139, -143)
shape = SubResource("CapsuleShape2D_ct4mp")
